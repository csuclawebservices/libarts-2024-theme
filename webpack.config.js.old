const defaultConfig = require('@wordpress/scripts/config/webpack.config.js');
const MiniCSSExtractPlugin = require( 'mini-css-extract-plugin' );
const postcssPlugins = require( '@wordpress/postcss-plugins-preset' );

const cssLoaders = [
	{
		loader: MiniCSSExtractPlugin.loader,
	},
	{
		loader: require.resolve( 'css-loader' ),
		options: {
			importLoaders: 1,
			sourceMap: ! isProduction,
			modules: {
				auto: true,
			},
			url: false,
		},
	},
	{
		loader: require.resolve( 'postcss-loader' ),
		options: {
			// Provide a fallback configuration if there's not
			// one explicitly available in the project.
			...( ! hasPostCSSConfig() && {
				postcssOptions: {
					ident: 'postcss',
					sourceMap: ! isProduction,
					plugins: isProduction
						? [
								...postcssPlugins,
								require( 'cssnano' )( {
									// Provide a fallback configuration if there's not
									// one explicitly available in the project.
									...( ! hasCssnanoConfig() && {
										preset: [
											'default',
											{
												discardComments: {
													removeAll: true,
												},
											},
										],
									} ),
								} ),
						  ]
						: postcssPlugins,
				},
			} ),
		},
	},
];

// Custom configuration
const customConfig = {
    module: {
        rules: [
            {
                test: /\.css$/i,
				loader: cssLoaders
            },
        ],
    },
};

// Modify the @wordpress/scripts/config/webpack.config.js cssLoaders to add the option to 'css-loader' of url: false

module.exports = {
	...defaultConfig,
	...customConfig
};